//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace _26onGrant.GrantServiceRef {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GrantServiceRef.I26onGrantService")]
    public interface I26onGrantService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I26onGrantService/registerLesee", ReplyAction="http://tempuri.org/I26onGrantService/registerLeseeResponse")]
        int registerLesee(string name, string lastName, string cell, string email, string password, string businessName, string typeBusiness, string vatNum, string compRegNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I26onGrantService/registerLesee", ReplyAction="http://tempuri.org/I26onGrantService/registerLeseeResponse")]
        System.Threading.Tasks.Task<int> registerLeseeAsync(string name, string lastName, string cell, string email, string password, string businessName, string typeBusiness, string vatNum, string compRegNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I26onGrantService/verifyEmail", ReplyAction="http://tempuri.org/I26onGrantService/verifyEmailResponse")]
        void verifyEmail(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I26onGrantService/verifyEmail", ReplyAction="http://tempuri.org/I26onGrantService/verifyEmailResponse")]
        System.Threading.Tasks.Task verifyEmailAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I26onGrantService/leeseeAuth", ReplyAction="http://tempuri.org/I26onGrantService/leeseeAuthResponse")]
        _26onGrant.GrantServiceRef.leeseeAuthResponse leeseeAuth(_26onGrant.GrantServiceRef.leeseeAuthRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I26onGrantService/leeseeAuth", ReplyAction="http://tempuri.org/I26onGrantService/leeseeAuthResponse")]
        System.Threading.Tasks.Task<_26onGrant.GrantServiceRef.leeseeAuthResponse> leeseeAuthAsync(_26onGrant.GrantServiceRef.leeseeAuthRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I26onGrantService/checkUser", ReplyAction="http://tempuri.org/I26onGrantService/checkUserResponse")]
        bool checkUser(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I26onGrantService/checkUser", ReplyAction="http://tempuri.org/I26onGrantService/checkUserResponse")]
        System.Threading.Tasks.Task<bool> checkUserAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I26onGrantService/getOffice", ReplyAction="http://tempuri.org/I26onGrantService/getOfficeResponse")]
        System.Data.DataTable getOffice(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I26onGrantService/getOffice", ReplyAction="http://tempuri.org/I26onGrantService/getOfficeResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> getOfficeAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I26onGrantService/getOfficeID", ReplyAction="http://tempuri.org/I26onGrantService/getOfficeIDResponse")]
        System.Data.DataTable getOfficeID(string officeType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I26onGrantService/getOfficeID", ReplyAction="http://tempuri.org/I26onGrantService/getOfficeIDResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> getOfficeIDAsync(string officeType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I26onGrantService/checkOfficeAvailibility", ReplyAction="http://tempuri.org/I26onGrantService/checkOfficeAvailibilityResponse")]
        System.Data.DataTable checkOfficeAvailibility(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I26onGrantService/checkOfficeAvailibility", ReplyAction="http://tempuri.org/I26onGrantService/checkOfficeAvailibilityResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> checkOfficeAvailibilityAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I26onGrantService/bookOffice", ReplyAction="http://tempuri.org/I26onGrantService/bookOfficeResponse")]
        int bookOffice(int officeID, int leeeeID, string startDate, string endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I26onGrantService/bookOffice", ReplyAction="http://tempuri.org/I26onGrantService/bookOfficeResponse")]
        System.Threading.Tasks.Task<int> bookOfficeAsync(int officeID, int leeeeID, string startDate, string endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I26onGrantService/bookVirtualOffice", ReplyAction="http://tempuri.org/I26onGrantService/bookVirtualOfficeResponse")]
        void bookVirtualOffice(int leeseeID, bool socialMarketing, string startDate, string endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I26onGrantService/bookVirtualOffice", ReplyAction="http://tempuri.org/I26onGrantService/bookVirtualOfficeResponse")]
        System.Threading.Tasks.Task bookVirtualOfficeAsync(int leeseeID, bool socialMarketing, string startDate, string endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I26onGrantService/getBoardroom", ReplyAction="http://tempuri.org/I26onGrantService/getBoardroomResponse")]
        System.Data.DataTable getBoardroom();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I26onGrantService/getBoardroom", ReplyAction="http://tempuri.org/I26onGrantService/getBoardroomResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> getBoardroomAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I26onGrantService/getThinkTank", ReplyAction="http://tempuri.org/I26onGrantService/getThinkTankResponse")]
        System.Data.DataTable getThinkTank();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I26onGrantService/getThinkTank", ReplyAction="http://tempuri.org/I26onGrantService/getThinkTankResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> getThinkTankAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I26onGrantService/bookTT", ReplyAction="http://tempuri.org/I26onGrantService/bookTTResponse")]
        int bookTT(string startTime, string endTime, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I26onGrantService/bookTT", ReplyAction="http://tempuri.org/I26onGrantService/bookTTResponse")]
        System.Threading.Tasks.Task<int> bookTTAsync(string startTime, string endTime, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I26onGrantService/bookBoardroom", ReplyAction="http://tempuri.org/I26onGrantService/bookBoardroomResponse")]
        int bookBoardroom(string startTime, string endTime, string name, int hours);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I26onGrantService/bookBoardroom", ReplyAction="http://tempuri.org/I26onGrantService/bookBoardroomResponse")]
        System.Threading.Tasks.Task<int> bookBoardroomAsync(string startTime, string endTime, string name, int hours);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I26onGrantService/officeType", ReplyAction="http://tempuri.org/I26onGrantService/officeTypeResponse")]
        System.Data.DataTable officeType([System.ServiceModel.MessageParameterAttribute(Name="officeType")] string officeType1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I26onGrantService/officeType", ReplyAction="http://tempuri.org/I26onGrantService/officeTypeResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> officeTypeAsync(string officeType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I26onGrantService/allOffice", ReplyAction="http://tempuri.org/I26onGrantService/allOfficeResponse")]
        System.Data.DataTable allOffice();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I26onGrantService/allOffice", ReplyAction="http://tempuri.org/I26onGrantService/allOfficeResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> allOfficeAsync();
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="leeseeAuth", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class leeseeAuthRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string businessname;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string status;
        
        public leeseeAuthRequest() {
        }
        
        public leeseeAuthRequest(string username, int id, string businessname, string password, string status) {
            this.username = username;
            this.id = id;
            this.businessname = businessname;
            this.password = password;
            this.status = status;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="leeseeAuthResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class leeseeAuthResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool leeseeAuthResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string businessname;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string status;
        
        public leeseeAuthResponse() {
        }
        
        public leeseeAuthResponse(bool leeseeAuthResult, int id, string businessname, string status) {
            this.leeseeAuthResult = leeseeAuthResult;
            this.id = id;
            this.businessname = businessname;
            this.status = status;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface I26onGrantServiceChannel : _26onGrant.GrantServiceRef.I26onGrantService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class I26onGrantServiceClient : System.ServiceModel.ClientBase<_26onGrant.GrantServiceRef.I26onGrantService>, _26onGrant.GrantServiceRef.I26onGrantService {
        
        public I26onGrantServiceClient() {
        }
        
        public I26onGrantServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public I26onGrantServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public I26onGrantServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public I26onGrantServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int registerLesee(string name, string lastName, string cell, string email, string password, string businessName, string typeBusiness, string vatNum, string compRegNum) {
            return base.Channel.registerLesee(name, lastName, cell, email, password, businessName, typeBusiness, vatNum, compRegNum);
        }
        
        public System.Threading.Tasks.Task<int> registerLeseeAsync(string name, string lastName, string cell, string email, string password, string businessName, string typeBusiness, string vatNum, string compRegNum) {
            return base.Channel.registerLeseeAsync(name, lastName, cell, email, password, businessName, typeBusiness, vatNum, compRegNum);
        }
        
        public void verifyEmail(int id) {
            base.Channel.verifyEmail(id);
        }
        
        public System.Threading.Tasks.Task verifyEmailAsync(int id) {
            return base.Channel.verifyEmailAsync(id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        _26onGrant.GrantServiceRef.leeseeAuthResponse _26onGrant.GrantServiceRef.I26onGrantService.leeseeAuth(_26onGrant.GrantServiceRef.leeseeAuthRequest request) {
            return base.Channel.leeseeAuth(request);
        }
        
        public bool leeseeAuth(string username, ref int id, ref string businessname, string password, ref string status) {
            _26onGrant.GrantServiceRef.leeseeAuthRequest inValue = new _26onGrant.GrantServiceRef.leeseeAuthRequest();
            inValue.username = username;
            inValue.id = id;
            inValue.businessname = businessname;
            inValue.password = password;
            inValue.status = status;
            _26onGrant.GrantServiceRef.leeseeAuthResponse retVal = ((_26onGrant.GrantServiceRef.I26onGrantService)(this)).leeseeAuth(inValue);
            id = retVal.id;
            businessname = retVal.businessname;
            status = retVal.status;
            return retVal.leeseeAuthResult;
        }
        
        public System.Threading.Tasks.Task<_26onGrant.GrantServiceRef.leeseeAuthResponse> leeseeAuthAsync(_26onGrant.GrantServiceRef.leeseeAuthRequest request) {
            return base.Channel.leeseeAuthAsync(request);
        }
        
        public bool checkUser(string email) {
            return base.Channel.checkUser(email);
        }
        
        public System.Threading.Tasks.Task<bool> checkUserAsync(string email) {
            return base.Channel.checkUserAsync(email);
        }
        
        public System.Data.DataTable getOffice(int id) {
            return base.Channel.getOffice(id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> getOfficeAsync(int id) {
            return base.Channel.getOfficeAsync(id);
        }
        
        public System.Data.DataTable getOfficeID(string officeType) {
            return base.Channel.getOfficeID(officeType);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> getOfficeIDAsync(string officeType) {
            return base.Channel.getOfficeIDAsync(officeType);
        }
        
        public System.Data.DataTable checkOfficeAvailibility(int id) {
            return base.Channel.checkOfficeAvailibility(id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> checkOfficeAvailibilityAsync(int id) {
            return base.Channel.checkOfficeAvailibilityAsync(id);
        }
        
        public int bookOffice(int officeID, int leeeeID, string startDate, string endDate) {
            return base.Channel.bookOffice(officeID, leeeeID, startDate, endDate);
        }
        
        public System.Threading.Tasks.Task<int> bookOfficeAsync(int officeID, int leeeeID, string startDate, string endDate) {
            return base.Channel.bookOfficeAsync(officeID, leeeeID, startDate, endDate);
        }
        
        public void bookVirtualOffice(int leeseeID, bool socialMarketing, string startDate, string endDate) {
            base.Channel.bookVirtualOffice(leeseeID, socialMarketing, startDate, endDate);
        }
        
        public System.Threading.Tasks.Task bookVirtualOfficeAsync(int leeseeID, bool socialMarketing, string startDate, string endDate) {
            return base.Channel.bookVirtualOfficeAsync(leeseeID, socialMarketing, startDate, endDate);
        }
        
        public System.Data.DataTable getBoardroom() {
            return base.Channel.getBoardroom();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> getBoardroomAsync() {
            return base.Channel.getBoardroomAsync();
        }
        
        public System.Data.DataTable getThinkTank() {
            return base.Channel.getThinkTank();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> getThinkTankAsync() {
            return base.Channel.getThinkTankAsync();
        }
        
        public int bookTT(string startTime, string endTime, string name) {
            return base.Channel.bookTT(startTime, endTime, name);
        }
        
        public System.Threading.Tasks.Task<int> bookTTAsync(string startTime, string endTime, string name) {
            return base.Channel.bookTTAsync(startTime, endTime, name);
        }
        
        public int bookBoardroom(string startTime, string endTime, string name, int hours) {
            return base.Channel.bookBoardroom(startTime, endTime, name, hours);
        }
        
        public System.Threading.Tasks.Task<int> bookBoardroomAsync(string startTime, string endTime, string name, int hours) {
            return base.Channel.bookBoardroomAsync(startTime, endTime, name, hours);
        }
        
        public System.Data.DataTable officeType(string officeType1) {
            return base.Channel.officeType(officeType1);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> officeTypeAsync(string officeType) {
            return base.Channel.officeTypeAsync(officeType);
        }
        
        public System.Data.DataTable allOffice() {
            return base.Channel.allOffice();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> allOfficeAsync() {
            return base.Channel.allOfficeAsync();
        }
    }
}
